{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introducci\u00f3n","text":"<p>El objetivo de esta tarea es resolver la siguiente integral:</p> <p>[ I = \\int_1^3 \\left( x^6 - x^2 \\sin(2x) \\right)\\, dx ]</p> <p>Para esto, utilizamos el m\u00e9todo de la cuadratura Gaussiana, usando los polinomios de Legendre, m\u00e9todo tambien conocido como cuadratura Gauss-Legendre.</p> <p>Para esto, se implemento el m\u00e9todo mediante un script de python <code>cuadrature.py</code>, se probo varios valores de (N) con el fin de encontrar un valor para la integral con un error relativo menor a $10^(10)$, respecto al valor analitico.</p> <p>Ademas, se realiza la documentacion del codigo usando MkDocs </p>"},{"location":"explanation/","title":"Explicaci\u00f3n del M\u00e9todo de Cuadratura Gaussiana","text":"<p>La cuadratura Gauss-Legendre es un m\u00e9todo que permite aproximar integrales en el intervalo ([-1,1]):</p> <p>[ \\int_{-1}^1 f(t)\\,dt \\approx \\sum_{i=1}^N w_i f(t_i) ]</p> <p>donde (t_i) son las ra\u00edces del polinomio de Legendre de orden (N), y (w_i) son pesos asociados.</p> <p>Este m\u00e9todo permite obtener un mejor resultado que el m\u00e9todo de trapecio para un mismo (N). </p> <p>Se utiliza los polinomios de Legrendre, los cuales son funciones matem\u00e1ticas que se usan como \"base\" para nuestro m\u00e9todo. Los primeros son:</p> <ul> <li>(P_0(x) = 1)</li> <li>(P_1(x) = x)</li> <li>(P_2(x) = \\frac{1}{2}(3x^2 - 1))</li> <li>(P_3(x) = \\frac{1}{2}(5x^3 - 3x))</li> </ul> <p>Para integrar en un intervalo ([a,b]), se usa el cambio de variable:</p> <p>[ x = \\tfrac{b-a}{2} t + \\tfrac{b+a}{2} ]</p> <p>Esto nos da: </p> <p>[ \\int_a^b f(x)\\,dx \\approx \\tfrac{b-a}{2} \\sum_{i=1}^N w_i \\, f!\\left(\\tfrac{b-a}{2}t_i + \\tfrac{b+a}{2}\\right). ]</p> <p>Para nuestro caso espec\u00edfico ([1, 3]):  $$x = \\frac{3-1}{2}\\xi + \\frac{1+3}{2} = \\xi + 2$$</p> <p>El algoritmo para realizar la aproximaci\u00f3n sigue los siguientes pasos :  1. Empezar con N = 1 punto 2. Calcular puntos y pesos en [-1, 1] usando Legendre 3. Escalar al intervalo [1, 3] 4. Evaluar la integral usando la suma ponderada 5. Calcular el error comparando con el valor exacto 6. Si el error es muy grande, aumentar N y repetir</p> <p>Este m\u00e9todo es exacto para polinomios hasta grado (2N-1).</p>"},{"location":"reference/","title":"Referencia de API","text":"<p>Esta secci\u00f3n contiene la documentaci\u00f3n autom\u00e1tica de todas las funciones del m\u00f3dulo <code>cuadrature.py</code>.</p> <p>::: cuadrature.py</p>"},{"location":"tutorials/","title":"Tutorial - Ejemplo de Uso","text":""},{"location":"tutorials/#ejecutar-el-script-desde-el-terminal","title":"Ejecutar el script desde el terminal","text":"<pre><code>python cuadrature.py\n</code></pre> <p>Esto resuelve autom\u00e1ticamente la integral y genera los gr\u00e1ficos.</p>"},{"location":"tutorials/#graficos-generados","title":"Gr\u00e1ficos generados","text":"<p>Al ejecutar el script, se generan dos gr\u00e1ficos:</p> <p></p> <p></p>"},{"location":"tutorials/#usar-las-funciones","title":"Usar las funciones","text":"<pre><code>import cuadrature as cq\n\n# Calcular integral con 5 puntos\npto, peso = cq.gaussxw(5)\npto_esc, peso_esc = cq.gaussxwab(1, 3, pto, peso)\nresultado = cq.eva_int(pto_esc, peso_esc, cq.func_arg_int)\n\nprint(f\"Integral: {resultado}\")\n\n# Comparar con valor exacto\nexacto = cq.derivada_analitica(3) - cq.derivada_analitica(1)\nerror = abs(resultado - exacto) / exacto\n\nprint(f\"Valor exacto: {exacto}\")\nprint(f\"Error: {error:.2e}\")\n</code></pre>"},{"location":"tutorials/#resultado-esperado","title":"Resultado esperado","text":"<pre><code>Integral: 317.344226721969\nValor exacto: 317.34424667382643\nError: 6.29e-08\n</code></pre>"}]}